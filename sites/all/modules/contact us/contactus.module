<?php
// $Id: contactus.module,v 1.0 2009/08/17 13:33:21 Exp $
/**
 * Implementation of contactus_menu().
 */


function contactus_menu() {


  $items = array();

  $access_config = array('administer site configuration');
  $access_content = array('Post Contact Us message');

  $items['contactus'] = array(
    'title' => t('Support'),
    'description' => t('Displays Contact Us web form'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('contactus_list'),
    /*'access arguments' => $access_content,*/
    'access arguments'=> array('access content'),
  );

  $items['admin/settings/contactus/settings'] = array(
    'title' => t('Contact Us settings'),
    'description' => 'Configuration settings for Contact Us',
	'file' => 'contactus.admin.inc',
	'access arguments' => array('Configure Contact Us settings'),
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );

  $items['admin/settings/contactus'] = array(
    'title' => t('Contact Us'),
    'description' => t('Displays Admin configuration for Contact Us web form.'),
	'file' => 'contactus.admin.inc',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('contactus_adminpage'),
    'access arguments' => array('Configure Contact Us settings'),
  );

  $items['admin/settings/formbuilder/contactus'] = array(
      'title' => t('Contact Us Formbuilder'),
      'access arguments' => array('Configure Contact Us form'),
	  'description' => t('Client side User Interface for building and editing Drupal forms'),
      'type' => MENU_NORMAL_ITEM,
      'page callback' => 'formbuilder_page'
  );

  $items['admin/settings/contactus/custom'] = array(
    'title' => t('Custom content'),
    'description' => t('Custom editable content for Contact Us end user interface'),
	'file' => 'contactus.admin.inc',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('contactus_custom_form'),
    'access arguments' => array('Configure Contact Us settings'),
	'type' => MENU_LOCAL_TASK,
	'weight' => 2,
  );

  $items['contactus/success'] = array(
    'title' => t('Support'),
    'description' => t('Contact Us form successfully submitted'),
    'page callback' => 'drupal_get_form',
	'page arguments' => array('contactus_result'),
    /*'access arguments' => $access_content,*/
    'access arguments'=> array('access content'),
	'type' => MENU_CALLBACK,
  );

  $items['contactus/get_form'] = array(
    'title' => t('Support'),
    'description' => t(''),
	'file' => 'contactus.admin.inc',
    'page callback' => 'contactus_getform',
    'access arguments' => $access_content,
	'type' => MENU_CALLBACK,
  );

  $items['contactus/get_layer'] = array(
    'title' => t('Support'),
    'description' => t(''),
    'page callback' => 'contactus_getlayer',
    'access arguments' => $access_content,
	'file' => 'contactus.admin.inc',
	'type' => MENU_CALLBACK,
  );

 $items['admin/settings/contactus/pre'] = array(
    'title' => t('Contact Us form preview'),
    'page callback' => 'preview_form',
    'access arguments' => array('Configure Contact Us settings'),
	'file' => 'contactus.admin.inc',
	'type' => MENU_CALLBACK,

  );

  $items['admin/settings/contactus/pre/check'] = array(
    'title' => t('Contact Us form preview check'),
    'page callback' => 'preview_form_check',
    'access arguments' => array('Configure Contact Us settings'),
	'file' => 'contactus.admin.inc',
	'type' => MENU_CALLBACK,

  );

  $items['contactus/error'] = array(
			'title' => t('Support Error'),
		    'access callback' => 'user_access',
			/*'access arguments' => $access_content,*/
                        'access arguments'=> array('access content'),
			'page callback' => 'contactus_error',
			'type' => MENU_CALLBACK,
		);

  return $items;
}

/**
 * Implementation of contactus_init().
 */
function contactus_init() {


	include_once drupal_get_path('module', 'contactus')."/classes/IContactUsContent.php";
	include_once drupal_get_path('module', 'contactus')."/classes/ContactusData.php";
	include_once drupal_get_path('module', 'contactus')."/classes/ContactusService.php";

  $path = drupal_get_path('module', 'contactus');

  drupal_add_js($path .'/contactus.js');

  $entity = !is_null(arg(3)) ? arg(3) : 0;

  $clean_url = variable_get('clean_url', 0) != '1' ? '?q=' : '';

  drupal_add_js(array('contactus' => array('argCustom' => arg(3) == 'custom' ? 'custom' : '','cleanUrl' => $clean_url,
                                          )), 'setting');
  drupal_add_js($path .'/qTip.js');

  drupal_add_css($path .'/qtip.css');

  drupal_add_css($path .'/contactus.css');

  //require_once('contactusdata.php');


}

/**
 * Implementation of contactus_perm().
 */
function contactus_perm() {
  return array('Configure Contact Us form', 'Post Contact Us message', 'Configure Contact Us settings');
}


/**
 * Contact Us web form - End user side.
 */
function contactus_list() {
  global $user;
  global $itrinno_site_id;
  //$itrinno_site_id= variable_get('framework_1_5_siteid','');

	set_contactus_captcha();

		$objContactusData = new ContactusData();
		$objContactusData->SetServiceName('contactus');
		$objContactusData->SetServiceIdentity('load');
		$objContactusData->SetSiteId($itrinno_site_id);
		$objContactusData->SetMethod('get');

		$objContactus = new ContactusService();
		$processedData = $objContactus->GetSubjects($objContactusData);

		$decodeResult = json_decode($processedData);

		foreach($decodeResult->subject_list as $key => $value){
			if(trim($value->statusCode) == 'Active')
			$options[$value->SubjectId] = $value->Name;
		}

		if(count($options) == 1)
		foreach($options as $subject_key=>$subject_val){
			$entity = $subject_key;
		}

		if (!is_null(arg(1)) && !is_null($decodeResult )) {
			$entity = arg(1);
		}

		if(count($options) > 1 && is_null(arg(1))) {

			foreach($options as $getkey => $getvalue) {
				$entityval = $getkey;break;
			}
			$form_objects = contactus_get_new_form($entityval);
		}
		else {

			$form_objects = contactus_get_new_form($entity);
		}
		//Identifiying the web user and email
		foreach ($form_objects as $keys => $values ) {
			if($keys == 'name' || $keys == 'Name') {
				foreach ($values as $key => $value) {
					if($key == '#default_value') {
						$form_objects[$keys][$key] = $user->name;
					}
				}
			}
			else if($keys == 'email' || $keys == 'Email' || $keys == 'email address' || $keys == 'Email Address') {
				foreach ($values as $key => $value) {
					if($key == '#default_value') {
						$form_objects[$keys][$key] = $user->mail;
					}
				}
			}else{
			if(is_array($values))
				foreach($values as $key => $value){
					if($key == '#validations'){//echo $value.'<br />';
						if($value){
								$form_objects[$keys]['#element_validate'] = array('field_validations');
						}
						//$form_objects[$keys][$key] = $user->mail;
					}
				}
			}
		}

		$form['#attributes'] = array('enctype' => "multipart/form-data");

		$form['mandatory'] = array(
			'#value' => '<span class="reqd">Required Field (<span class="form-required">*</span>)</span>',
			'#type' => 'item',
			'#weight' => -9,
		);

		if (variable_get('contactus_custom_topmiddle', 0) == 1) {
			$form['top_middle'] = array(
				'#value' => variable_get('contactus_custom_content_topmiddle', ''),
				'#type' => 'item',
				'#prefix' => '<div class="contactus-top-middle">',
				'#suffix' => '</div>',
				'#weight' => -10,
			);
		}

		 if(count($options) == 1){
		 		$form['subject'] = array(
				  '#title' => t(''),
				  '#type' => 'hidden',
				  '#description' => t(''),
				  '#weight' => -8,
				  '#default_value' => $entity,
				  );
		 }
		 else {

			 if (!is_null($decodeResult)) {
				$form['subject'] = array(
				  '#title' => t('Choose a Subject'),
				  '#type' => 'select',
				  '#description' => t(''),
				  '#weight' => -8,
				  '#options' => $options,
				  '#default_value' => $entity,
				  );
		 	}
		}

		//	To display the bottom-middle content
		if (variable_get('contactus_custom_bottommiddle', 0) == 1) {
			$form['bottom_middle_content'] = array(
				'#type' => 'item',
				'#value' => variable_get('contactus_custom_content_bottommiddle', ''),
				'#prefix' => '<div class="contactus-bottom-middle">',
				'#suffix' => '</div>',
				'#weight' => 8,
			);
		}
		$form['startdiv'] = array('#type' => 'item', '#prefix' => '<div id="contactUs">', '#weight' => -10);
		$form['contact_ok'] = array(
			'#type' => 'submit',
			'#value' => t('Submit'),
			'#weight' => 9,
		);

		if (variable_get('contactus_custom_bottom', 0) == 1) {
			$form['bottom_content'] = array(
				'#type' => 'item',
				'#value' => variable_get('contactus_custom_content_bottom', ''),
				'#prefix' => '<div class="contactus-bottom">',
				'#suffix' => '</div>',
				'#weight' => 10,
			);
		}
		$form['enddiv'] = array('#type' => 'item', '#suffix' => '</div>', '#weight' => 11);
		$form = array_merge($form, $form_objects);
		return $form;

}

/**
 * Contact Us web form - End user side validation.
 */
function contactus_list_validate($form_id, &$form_state) {

	variable_set('contactus_upload_extensions', 'jpg jpeg gif png txt doc xls pdf ppt mp3');
	variable_set('contactus_upload_uploadsize', 2);

	$file_uploadsize = variable_get('contactus_upload_uploadsize', '');
	$file_size = ($file_uploadsize * 1024 * 1024);

	//print_r($form_state['values']);exit;

	foreach($_FILES['files']['error'] as $key => $values) {
		if($values == 1 || $values == 2 || $values == 3 || $values == 6 || $values == 7){
			form_set_error($key, t('Please upload a file which is less than '.$file_uploadsize.' MB, and check your uploaded file is correct'));
		}

	}

	foreach($_FILES['files']['size'] as $key => $values) {
		if($values > $file_size){
			form_set_error($key, t('Please upload a file which is less than '.$file_uploadsize.' MB'));
		}

	}

	foreach($_FILES['files']['name'] as $key => $values) {
		if($values != '') {
			$file_ext_error = file_validate_extensions_custom_contactus($values, variable_get('contactus_upload_extensions', ''));
			if($file_ext_error) {
				form_set_error($key, $file_ext_error);
			}
		}
	}

	$mail = $form_state['values']['email'];

	$subject = $form_state['values']['subject'];

	if (!empty($mail) && !valid_email_address($mail)) {
    form_set_error('error', t('The e-mail address %mail is not valid.', array('%mail' => $mail)));
    }

	$phone = $form_state['values']['Phone'];
	//drupal_set_message("Phone ".$phone);

	if(!empty($phone) && !preg_match("/^[0-9]{10}$/", $phone)){
		form_set_error('error', t('The phone number %phone is not valid.', array('%phone' => $phone)));
		return FALSE;
	}

}

function file_validate_extensions_custom_contactus($filename, $extensions) {
	global $user;

  // Bypass validation for uid  = 1.
  if ($user->uid != 1) {
    $regex = '/\.('. ereg_replace(' +', '|', preg_quote($extensions)) .')$/i';
    if (!preg_match($regex, $filename)) {
      $errors = t('Only files with the following extensions are allowed: %files-allowed.', array('%files-allowed' => $extensions));
    }
  }
  return $errors;
}

/**
 * Funtion to ContactUs Form submits.
 */
function contactus_list_submit($form_id, &$form_state) {
    global $itrinno_site_id;
   // $itrinno_site_id= variable_get('framework_1_5_siteid','');
	$subject = ($form_state['values']['subject'] && $form_state['values']['subject'] != -1) ? $form_state['values']['subject'] : 'no_subject';

	$data_array = array();

	$i = 0;

$default_keys = array('op', 'contact_ok', 'form_build_id', 'form_token', 'form_id', 'captcha_response', 'captcha_solution', 'captcha_token', 'captcha_info','message','email');

	foreach ($form_state['values'] as $key => $value) {

		$get_enc_data = $form_id[$key]['#encryption'];

		if(!in_array($key, $default_keys) && $value !='' && $value !=null && $form_id[$key]['#type'] != 'submit') {
			switch(strtolower($form_id[$key]['#type'])){
				case 'radios':
					$value = $form_id[$key]['#options'][$value];
				break;

				case 'checkbox':
					$value = $value == 0?$value.'('.t('Unchecked').')':$value.'('.t('Checked').')';
				break;
			}
			if ($get_enc_data == 1) {

				$params->ContactUs->ContactInfo[$i]->FieldName = $key;
                $params->ContactUs->ContactInfo[$i]->FieldValue = $value;
                $params->ContactUs->ContactInfo[$i]->IsEncrypted = 'true';
                $params->ContactUs->ContactInfo[$i]->EncryptedValue = $value;

            } else {

				$params->ContactUs->ContactInfo[$i]->FieldName = $key;
				if($value!='no_subject'){
                $params->ContactUs->ContactInfo[$i]->FieldValue = $value;
				}else{
				  $params->ContactUs->ContactInfo[$i]->FieldValue ='';
				}
                $params->ContactUs->ContactInfo[$i]->IsEncrypted = 'false';
                $params->ContactUs->ContactInfo[$i]->EncryptedValue = '';
            }

			$i++;
		}
	}


	/*
	* For file upload, if the form contains file field
	*/
	variable_set('contactus_upload_extensions', 'jpg jpeg gif png txt doc xls pdf ppt mp3');
	variable_set('contactus_upload_uploadsize', 2);

	 $file_destination = file_create_path(file_directory_path() .'/contactusuploads');
	 $file_uploadsize = variable_get('contactus_upload_uploadsize','1');
	 $file_limit = $file_uploadsize;
	 $file_size = ($file_uploadsize * 1024 * 1024);
	 $file_limit = ($file_limit && $file_size) ? max($file_limit, $file_size) : 0;

	 $limits['extensions'] = variable_get('contactus_upload_extensions','jpg jpeg');
	 $limits['file_size'] = $file_limit;

	$k=0;
	if($_FILES['files']['name']) {

	  foreach($_FILES['files']['name'] as $key => $values) {
		if($values != '') {
			$validators = array(
						'file_validate_extensions' => array($limits['extensions']),
						'file_validate_size' => array($limits['file_size']),
					);

				if (!$uploaded_file = file_save_upload($key, $validators, $file_destination)) {
					return;
				} else {
					 $params->ContactUs->ContactInfo[$i]->FieldName = $uploaded_file->source;
					 $params->ContactUs->ContactInfo[$i]->FieldValue = curPageURL().base_path().$uploaded_file->filepath;
					 $params->ContactUs->ContactInfo[$i]->IsEncrypted = 'false';
					 $params->ContactUs->ContactInfo[$i]->EncryptedValue = '';
				}
				$i++;
		 }
	  }//for each
	}//if
	// File Upload End


	if(strcmp($subject, 'no_subject') <> 0)
	$params->ContactUs->Subject_id = $subject;
	else
	$params->ContactUs->Subject_id = 0;

	$params->ContactUs->from = $form_state['values']['email'];
	if($form_state['values']['Comments'] != null || trim($form_state['values']['Comments']) != "") {
            $params->ContactUs->message = $form_state['values']['Comments'];
        } else {
            $params->ContactUs->message = "";
        }
	    //    $params->ContactUs->message = 'Thank you For Contacting us.';


	$objContactusDat = new ContactusData();
	$objContactusDat->SetServiceName('contactus');
	$objContactusDat->SetServiceIdentity('create');
	$objContactusDat->SetSiteId($itrinno_site_id);
	$objContactusDat->SetMethod('post');

	$params->ContactUs->Site_id = $itrinno_site_id;
	$params->ContactUs->StatusCode = 'New';


	$objContactusDat->SetPostedData($objContactusDat->DataEncode($params));
	$objContactus = new ContactusService();
	//print_r($objContactusDat);exit;

	$processedData = $objContactus->CreateContactUs($objContactusDat);

	$obj_response = $objContactusDat->DataDecode($processedData);

	if($obj_response->Message != 'Success') {
		$InquiryID = $obj_response->contactusId;
		$_SESSION['InquiryID'] = $InquiryID;
		setcookie("InquiryID", $InquiryID);

		$landing_url = variable_get('contactus_redirect_custom_url','');

		if($landing_url != ''){
			drupal_goto($landing_url);
		}
		else {

			/*$message = array(
			  'to' => $form_state['values']['email'],
			  'subject' => t('Example subject'),
			  'body' => t('Example body'),
			  'headers' => array('From' => 'admin@itrinno.com'),
			);

			drupal_mail_send($message);*/
			drupal_goto('contactus/success/'.$form_state['values']['email']);
		}

	}
	else {

		drupal_goto('contactus/error');
	}

	//drupal_goto('contactus/success/'.$form_state['values']['email']);

}


/**
 * Function to display the contactus form in user end
 */
function contactus_get_new_form($getval) {

	$subject_id = arg(0) == 'contactus' && is_null(arg(1)) ? $getval : arg(1);

	if($getval) {

		$form_id = db_result(db_query("SELECT form_id FROM {contactus} WHERE subject_id='%s'", $getval));

		if($form_id == 'default' || $form_id == '')
			$form_id = db_result(db_query("SELECT form_id FROM {formbuilder_form} WHERE active='1' AND form_type = '%s'" , 'contactus'));
		else
			$form_id = db_result(db_query("SELECT form_id FROM {formbuilder_form} WHERE form_id='%s' AND form_type = '%s'", $form_id,'contactus'));
	}
	else {

		$form_id = db_result(db_query("SELECT form_id FROM {contactus} WHERE subject_id='%s'", $subject_id));

		if($form_id == 'default' || $form_id == '')
			$form_id = db_result(db_query("SELECT form_id FROM {formbuilder_form} WHERE active='1' AND form_type = '%s'" , 'contactus'));
		else
			$form_id = db_result(db_query("SELECT form_id FROM {formbuilder_form} WHERE form_id='%s' AND form_type = '%s'", $form_id,'contactus'));

	}

	$form_fields = unserialize(db_result(db_query("SELECT form FROM {formbuilder_form} WHERE form_id='%s' AND form_type = '%s'", $form_id,'contactus')));

	if ($form_fields)
		return $form_fields;
	else {
		$form_fields = unserialize(db_result(db_query("SELECT form FROM {formbuilder_form} WHERE active = 1 AND form_type = '%s'", 'contactus')));
		return $form_fields;
	}
}

/**
 * Implementation captcha
 */
function contactus_get_captcha() {

  $query = db_query("SELECT count(module) AS avail FROM {captcha_points} WHERE form_id = '%s'", 'contactus_list');
  $values = db_fetch_object($query);

}

/**
 * After contact us is submitted successfully, page redirects to thank u page.
 */
function contactus_result() {

	global $user;
	$InquiryID = $_SESSION['InquiryID'] ? $_SESSION['InquiryID'] : $_COOKIE['InquiryID'];
	$_SESSION['InquiryID'] = '';
	setcookie("InquiryID", '');

	if (variable_get('contactus_thank_topmiddle', 0) == 1) {
		$form['thank_top_middle'] = array(
			'#value' => str_replace('<<TRACKERID>>', $InquiryID, variable_get('contactus_thank_content_topmiddle', '')),
			'#type' => 'item',
			'#prefix' => '<div class="contactus-result-top-middle">',
			'#suffix' => '</div>',
			'#weight' => -1,
		);
	}

	$register_link_val = variable_get('contactus_register_link','');
	$registrationpage_link = str_replace('<<TRACKERID>>', $InquiryID, variable_get('contactus_registration_page',''));

	if($user->uid == 0 && $register_link_val == 1 && $registrationpage_link != '') {
		$link = 'Go to '.l(t('Register'), $registrationpage_link);
	} //elseif($user->uid == 0) {
		//$link = 'Go to '.l('Register', 'user/register/'.arg(2));
	//}

	$form['output'] = array(
		'#type' => 'item',
		//'#prefix' => '<div class="contactus-result">',
                '#prefix' => '<div class="contactus-result thank-you-msg">',
		'#value' => str_replace('<<TRACKERID>>', $InquiryID, t(variable_get('contactus_redirect_thankyou_message',t('Thank you for your contact us message'))).'<br />').$link,
		'#suffix' => '</div>',
		'#weight' => 0,
	);

	if (variable_get('contactus_thank_bottommiddle', 0) == 1) {
		$form['thank_bottom_middle'] = array(
			'#type' => 'item',
			'#value' => str_replace('<<TRACKERID>>', $InquiryID, variable_get('contactus_thank_content_bottommiddle', '')),
			'#prefix' => '<div class="contactus-result-bottom-middle">',
			'#suffix' => '</div>',
			'#weight' => 1,
		);
	}
	if (variable_get('contactus_thank_bottom', 0) == 1) {
		$form['thank_bottom'] = array(
			'#type' => 'item',
			'#value' => str_replace('<<TRACKERID>>', $InquiryID, variable_get('contactus_thank_content_bottom', '')),
			'#prefix' => '<div class="contactus-result-bottom">',
			'#suffix' => '</div>',
			'#weight' => 2,
		);
	}
	return $form;
}

/**
 * error page
 * @return
 * @param
*/
function contactus_error() {

  $output = t('Oops! An error has occured, please try again later!');

  return $output;
}


/*
*	Function to do the validate function based on the form builder
*/
function field_validations($form, $form_state){
	$function = $form['#validations'];

	if(!empty($form['#value'])) {
		$inputvalue = str_replace(' ', '', $form['#value']);

		if(!$function($inputvalue)){
			form_error($form, t("Invalid character found on ".$form['#title'].", Please enter valid information."));
		}
	}
}

/*
*	to set the captcha according to the admin configuartion
*	Added By sunil on NOV-05-2009
*/
function set_contactus_captcha(){
	$captcha_type = db_fetch_object(db_query("SELECT module, type FROM {captcha_points} WHERE form_id = '%s'", 'contactus_list'));
	$captcha_avail = db_result(db_query("SELECT COUNT(form_id) FROM {captcha_points} WHERE form_id = '%s'", 'contactus_list'));
	if (variable_get('contactus_captcha', 0) == 1) {
			if (cache_get('captcha_variable')) {
				$c_vars = cache_get('captcha_variable');
				$captcha_vars = explode('&', $c_vars->data);

				cache_clear_all('captcha_variable', 'cache');
			}
			else {
				if (module_exists('image_captcha')) {
					$captcha_vars[0] = 'image_captcha';
					$captcha_vars[1] = 'Image';
				}
				elseif (module_exists('text_captcha')) {
					$captcha_vars[0] = 'text_captcha';
					$captcha_vars[1] = 'Text';
				}
				else {
					$captcha_vars[0] = 'captcha';
					$captcha_vars[1] = 'Math';
				}
			}

		if ($captcha_avail == 0){
			db_query("INSERT INTO {captcha_points} (form_id, module, type) VALUES ('%s', '%s', '%s')", 'contactus_list', $captcha_vars[0], $captcha_vars[1]);
		}else if(empty($captcha_type->module)){
			db_query("UPDATE {captcha_points} SET module = '%s', type = '%s' WHERE form_id = '%s'", $captcha_vars[0], $captcha_vars[1], 'contactus_list');
		}
	}
	else {
		if ($captcha_avail != 0) {
			$data = $captcha_type->module . '&' . $captcha_type->type;
			cache_set('captcha_variable', $data);
			db_query("UPDATE {captcha_points} SET module = NULL, type = NULL WHERE form_id = '%s'", 'contactus_list');
		}
	}

}
